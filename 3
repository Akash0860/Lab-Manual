import numpy as np
import pandas as pd
# Loading Data from a CSV File
data1= pd.read_csv('Ex02.csv')
print(data1)
#data = pd.DataFrame(data=data1)
# Separating concept features from Target
concepts = np.array(data1.iloc[:,0:-1])
# Isolating target into a separate DataFrame
#copying last column to target array
target = np.array(data1.iloc[:,-1])
print('concepts')
print(concepts)
print('target')
print(target)
def learn(concepts, target):
 '''
 learn() function implements the learning method of the Candidate elimination algorithm.
 Arguments:
 concepts - a data frame with all the features
 target - a data frame with corresponding output values
 '''
 # Initialise S0 with the first instance from concepts
 # .copy() makes sure a new list is created instead of just pointing to the same memory location
 specific_h = concepts[0].copy()
 print("initialization of specific_h and general_h")
 print("\n specific_h :")
 print(specific_h)
 
 general_h = [["?" for i in range(len(specific_h))] 
 for i in range(len(specific_h))]
 print("\n general_h:")
 print(general_h)
 
 # The learning iterations
 for i, h in enumerate(concepts):
 # Checking if the hypothesis has a positive target
 if target[i] == "Yes":
 for x in range(len(specific_h)):
 # Change values in S & G only if values change
 if h[x] != specific_h[x]:
 specific_h[x] = '?'
 general_h[x][x] = '?'
 # Checking if the hypothesis has a negative target
 if target[i] == "No":
 for x in range(len(specific_h)):
 # For negative hyposthesis change values only in G
 if h[x] != specific_h[x]:
 general_h[x][x] = specific_h[x]
# else:
# general_h[x][x] = '?'
 
 print(" \n ------ Candidate Elimination Algorithm Step : ",i+1)
 print("\n specific_h:")
 print(specific_h)
 print("\n general_h:")
 print(general_h)
 # find indices where we have empty rows, meaning those that are unchanged
 indices = [i for i, val in enumerate(general_h) if val == ['?', '?', '?', '?', '?', '?']]
 for i in indices:
 # remove those rows from general_h
 general_h.remove(['?', '?', '?', '?', '?', '?'])
 # Return final values
 return specific_h, general_h
s_final, g_final = learn(concepts, target)
print("\n Final Specific_h:", s_final)
print("\n Final General_h:", g_final)
Input csv file:
Ex02.csv
Output:
Sky Temp Humidity Wind Water Forecast Play
0 Sunny Warm Normal Strong Warm Same Yes
1 Sunny Warm High Strong Warm Same Yes
2 Rainy Cold High Strong Warm Change No
3 Sunny Warm High Strong Cool Change Yes
concepts
[['Sunny' 'Warm' 'Normal' 'Strong' 'Warm' 'Same']
['Sunny' 'Warm' 'High' 'Strong' 'Warm' 'Same']
['Rainy' 'Cold' 'High' 'Strong' 'Warm' 'Change']
['Sunny' 'Warm' 'High' 'Strong' 'Cool' 'Change']]
target
['Yes' 'Yes' 'No' 'Yes']
initialization of specific_h and general_h
specific_h :
['Sunny' 'Warm' 'Normal' 'Strong' 'Warm' 'Same']
general_h:
[['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', 
'?']]
------ Candidate Elimination Algorithm Step : 1
specific_h:
['Sunny' 'Warm' 'Normal' 'Strong' 'Warm' 'Same']
general_h:
[['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', 
'?']]
------ Candidate Elimination Algorithm Step : 2
specific_h:
['Sunny' 'Warm' '?' 'Strong' 'Warm' 'Same']
general_h:
[['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', 
'?']]
------ Candidate Elimination Algorithm Step : 3
specific_h:
['Sunny' 'Warm' '?' 'Strong' 'Warm' 'Same']
general_h:
[['Sunny', '?', '?', '?', '?', '?'], ['?', 'Warm', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', 
'?', '?', '?', 'Same']]
------ Candidate Elimination Algorithm Step : 4
specific_h:
['Sunny' 'Warm' '?' 'Strong' '?' '?']
general_h:
[['Sunny', '?', '?', '?', '?', '?'], ['?', 'Warm', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', '?', '?', '?', '?'], ['?', '?', 
'?', '?', '?', '?']]
Final Specific_h: ['Sunny' 'Warm' '?' 'Strong' '?' '?']
Final General_h: [['Sunny', '?', '?', '?', '?', '?'], ['?', 'Warm', '?', '?', '?', '?']]
